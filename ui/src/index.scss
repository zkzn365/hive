@import 'common/variable';
@import '~bootstrap/scss/bootstrap';
@import '~bootstrap-icons';

.bg-gray-300 {
  background-color: $gray-300;
}

.focus {
  color: $input-focus-color !important;
  background-color: $input-focus-bg !important;
  border-color: $input-focus-border-color !important;
  outline: 0 !important;
  @if $enable-shadows {
    @include box-shadow($input-box-shadow, $input-focus-box-shadow);
  } @else {
    box-shadow: $input-focus-box-shadow !important;
  }
}

:root {
  overflow-y: scroll;
}

html,
body {
  padding: 0;
}

a {
  text-decoration: none;
}

.btn-link {
  text-decoration: none;
}

.fs-14 {
  font-size: 0.875rem;
}
.fs-12 {
  font-size: 0.75rem;
}

.pic-auth-modal {
  width: 25%;
}

.no-toggle {
  &::after {
    display: none;
  }
}

.unread-dot {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  position: absolute;
  left: 15px;
  top: 0;
  border: 1px solid #fff;
}

.badge-tag {
  display: inline-block;
  font-size: 14px;
  background: rgba($blue-100, 0.5);
  padding: 0px 7px 1px;
  color: $blue-700;
  border: 1px solid transparent;
  &:hover {
    background: $blue-100;
  }
}

.badge-tag-required {
  background: $gray-200;
  color: $gray-700;
  border: 1px solid $gray-400;
  &:hover {
    color: $gray-700;
    background: $gray-300;
  }
}

.badge-tag-reserved {
  background: rgba($orange-100, 0.5);
  color: $orange-700;
  border: 1px solid $orange-100;
  &:hover {
    color: $orange-700;
    background: rgba($orange-100, 1);
  }
}

.divide-line {
  border-bottom: 1px solid rgba(33, 37, 41, 0.25);
}

#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}
#root > footer {
  margin-top: auto !important;
}

.bg-f5 {
  background-color: #f5f5f5;
}

.btn-no-border,
.btn-no-border:hover,
.btn-no-border:focus,
.btn-no-border:active:focus {
  border: none;
  box-shadow: none;
}

.pointer:hover {
  cursor: pointer;
}

.resize-none {
  resize: none;
}

.split-dot {
  margin-left: 0.25rem !important;
  margin-right: 0.25rem !important;
  &:before {
    content: '\2022';
    color: #6c757d;
  }
}

.text-truncate-1,
.text-truncate-2,
.text-truncate-3,
.text-truncate-4 {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.text-truncate-2 {
  -webkit-line-clamp: 2;
}
.text-truncate-3 {
  -webkit-line-clamp: 3;
}
.text-truncate-4 {
  -webkit-line-clamp: 4;
}

.last-p {
  p:last-child {
    margin-bottom: 0;
  }
}

.me-10 {
  margin-right: 10px;
}

.warning {
  background-color: #fff3cd80;
}

.fit-content {
  height: fit-content;
  width: fit-content;
  flex: none;
}

// fix bug for React-Bootstrap Form.Text
.form-text {
  display: inline-block;
}

.object-fit-contain {
  object-fit: contain;
}
.fmt {
  width: 100%;
  h1 {
    @extend .fs-3;
    margin-top: 2rem;
  }
  h2 {
    @extend .fs-4;
    margin-top: 2rem;
  }
  h3 {
    @extend .fs-5;
    margin-top: 2rem;
  }
  h4 {
    @extend .fs-6;
    margin-top: 2rem;
  }
  h5 {
    @extend .fs-14;
    margin-top: 2rem;
  }
  h6 {
    @extend .fs-12;
    margin-top: 2rem;
  }
  img {
    max-width: 100%;
  }
  p {
    word-break: break-all;
    > code {
      background-color: #e9ecef;
      color: #212529;
      padding: 2px 4px;
      border-radius: 0.25rem;
    }
  }
  pre {
    background-color: #e9ecef;
    border-radius: 0.25rem;
    padding: 1rem;
  }
  blockquote {
    border-left: 0.25rem solid #ced4da;
    padding: 1rem;
    color: #6c757d;
    background-color: #e9ecef;
    p {
      color: $body-color;
    }
    > p:last-child {
      margin-bottom: 0;
    }
  }
}

.upload-img-wrap {
  flex-grow: 1;
  height: 128px;
}
.badge-label {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  padding: 1px 0.5rem 2px;
  height: 24px;
}

.review-text-delete {
  color: #842029;
  background-color: #f8d7da;
  text-decoration: line-through;
  .review-text-add {
    text-decoration: none;
  }
}

.review-text-add {
  color: #0f5132;
  background-color: #d1e7dd;
  text-decoration: none !important;
}

.rotate-90-deg {
  display: inline-block;
  transform: rotate(90deg);
  transition: transform 0.2s;
}
.rotate-0-deg {
  display: inline-block;
  transform: rotate(0deg);
  transition: transform 0.2s;
}

.pre-line {
  white-space: pre-wrap;
}
